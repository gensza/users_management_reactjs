{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\users_management\\\\src\\\\components\\\\dataTables\\\\CustomPagination.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CPagination } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomPagination(props) {\n  const {\n    entriesToShow,\n    totalData,\n    currentPage,\n    setCurrentPage\n  } = props;\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalData / entriesToShow); i++) {\n    pageNumbers.push(i);\n  }\n  console.log(pageNumbers);\n  let start = 1,\n    end = pageNumbers.length;\n  if (currentPage - 2 > 1) {\n    start = currentPage - 2;\n  }\n  if (currentPage + 2 < pageNumbers.length) {\n    end = currentPage + 2;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'mt-2',\n    children: /*#__PURE__*/_jsxDEV(CPagination, {\n      activePage: currentPage,\n      pages: 10,\n      onActivePageChange: i => setActivePage(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n  // <CPagination aria-label=\"Page navigation example\">\n  //   <CPaginationItem\n  //     aria-label=\"Previous\"\n  //     onClick={() => setCurrentPage(1)}\n  //     disabled={currentPage === 1}\n  //   >\n  //     <span aria-hidden=\"true\">&laquo;</span>\n  //   </CPaginationItem>\n\n  //   {/* {start !== 1 && <CPaginationEllipsis />} */}\n  //   {pageNumbers.slice(start - 1, end).map((number) => (\n  //     <CPaginationItem\n  //       key={number}\n  //       onClick={() => setCurrentPage(number)}\n  //       active={currentPage === number}\n  //     >\n  //       {number}\n  //     </CPaginationItem>\n  //   ))}\n  //   <CPaginationItem>...</CPaginationItem>\n  //   {/* {end !== pageNumbers.length && <CPaginationEllipsis />} */}\n\n  //   <CPaginationItem\n  //     aria-label=\"Next\"\n  //     onClick={() => setCurrentPage(pageNumbers.length)}\n  //     disabled={currentPage === pageNumbers.length}\n  //   >\n  //     <span aria-hidden=\"true\">&raquo;</span>\n  //   </CPaginationItem>\n  // </CPagination>\n\n  // <CPagination>\n  //   <CPagination.First onClick={setCurrentPage(1)} disabled={currentPage === 1} />\n  //   <CPagination.Prev\n  //     onClick={() => setCurrentPage(currentPage - 1)}\n  //     disabled={currentPage === 1}\n  //   />\n  //   {start !== 1 && <CPagination.Ellipsis />}\n  //   {pageNumbers.slice(start - 1, end).map((number) => (\n  //     <CPagination.Item\n  //       key={number}\n  //       onClick={() => setCurrentPage(number)}\n  //       active={currentPage === number}\n  //     >\n  //       {number}\n  //     </CPagination.Item>\n  //   ))}\n  //   {end !== pageNumbers.length && <CPagination.Ellipsis />}\n  //   <CPagination.Next\n  //     onClick={() => setCurrentPage(currentPage + 1)}\n  //     disabled={currentPage === pageNumbers.length}\n  //   />\n  //   <CPagination.Last\n  //     onClick={() => setCurrentPage(pageNumbers.length)}\n  //     disabled={currentPage === pageNumbers.length}\n  //   />\n  // </CPagination>\n  ;\n}\n_c = CustomPagination;\nCustomPagination.propTypes = {\n  entriesToShow: PropTypes.string,\n  totalData: PropTypes.number,\n  currentPage: PropTypes.number,\n  setCurrentPage: PropTypes.func\n};\nexport default CustomPagination;\nvar _c;\n$RefreshReg$(_c, \"CustomPagination\");","map":{"version":3,"names":["React","PropTypes","CPagination","jsxDEV","_jsxDEV","CustomPagination","props","entriesToShow","totalData","currentPage","setCurrentPage","pageNumbers","i","Math","ceil","push","console","log","start","end","length","className","children","activePage","pages","onActivePageChange","setActivePage","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","number","func","$RefreshReg$"],"sources":["D:/ReactJs/users_management/src/components/dataTables/CustomPagination.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { CPagination } from '@coreui/react'\r\n\r\nfunction CustomPagination(props) {\r\n  const { entriesToShow, totalData, currentPage, setCurrentPage } = props\r\n  const pageNumbers = []\r\n\r\n  for (let i = 1; i <= Math.ceil(totalData / entriesToShow); i++) {\r\n    pageNumbers.push(i)\r\n  }\r\n\r\n  console.log(pageNumbers)\r\n\r\n  let start = 1,\r\n    end = pageNumbers.length\r\n  if (currentPage - 2 > 1) {\r\n    start = currentPage - 2\r\n  }\r\n  if (currentPage + 2 < pageNumbers.length) {\r\n    end = currentPage + 2\r\n  }\r\n\r\n  return (\r\n    <div className={'mt-2'} >\r\n    <CPagination\r\n      activePage={currentPage}\r\n      pages={10}\r\n      onActivePageChange={(i) => setActivePage(i)}\r\n    ></CPagination>\r\n  </div>\r\n    // <CPagination aria-label=\"Page navigation example\">\r\n    //   <CPaginationItem\r\n    //     aria-label=\"Previous\"\r\n    //     onClick={() => setCurrentPage(1)}\r\n    //     disabled={currentPage === 1}\r\n    //   >\r\n    //     <span aria-hidden=\"true\">&laquo;</span>\r\n    //   </CPaginationItem>\r\n\r\n    //   {/* {start !== 1 && <CPaginationEllipsis />} */}\r\n    //   {pageNumbers.slice(start - 1, end).map((number) => (\r\n    //     <CPaginationItem\r\n    //       key={number}\r\n    //       onClick={() => setCurrentPage(number)}\r\n    //       active={currentPage === number}\r\n    //     >\r\n    //       {number}\r\n    //     </CPaginationItem>\r\n    //   ))}\r\n    //   <CPaginationItem>...</CPaginationItem>\r\n    //   {/* {end !== pageNumbers.length && <CPaginationEllipsis />} */}\r\n\r\n    //   <CPaginationItem\r\n    //     aria-label=\"Next\"\r\n    //     onClick={() => setCurrentPage(pageNumbers.length)}\r\n    //     disabled={currentPage === pageNumbers.length}\r\n    //   >\r\n    //     <span aria-hidden=\"true\">&raquo;</span>\r\n    //   </CPaginationItem>\r\n    // </CPagination>\r\n\r\n    // <CPagination>\r\n    //   <CPagination.First onClick={setCurrentPage(1)} disabled={currentPage === 1} />\r\n    //   <CPagination.Prev\r\n    //     onClick={() => setCurrentPage(currentPage - 1)}\r\n    //     disabled={currentPage === 1}\r\n    //   />\r\n    //   {start !== 1 && <CPagination.Ellipsis />}\r\n    //   {pageNumbers.slice(start - 1, end).map((number) => (\r\n    //     <CPagination.Item\r\n    //       key={number}\r\n    //       onClick={() => setCurrentPage(number)}\r\n    //       active={currentPage === number}\r\n    //     >\r\n    //       {number}\r\n    //     </CPagination.Item>\r\n    //   ))}\r\n    //   {end !== pageNumbers.length && <CPagination.Ellipsis />}\r\n    //   <CPagination.Next\r\n    //     onClick={() => setCurrentPage(currentPage + 1)}\r\n    //     disabled={currentPage === pageNumbers.length}\r\n    //   />\r\n    //   <CPagination.Last\r\n    //     onClick={() => setCurrentPage(pageNumbers.length)}\r\n    //     disabled={currentPage === pageNumbers.length}\r\n    //   />\r\n    // </CPagination>\r\n  )\r\n}\r\n\r\nCustomPagination.propTypes = {\r\n  entriesToShow: PropTypes.string,\r\n  totalData: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  setCurrentPage: PropTypes.func,\r\n}\r\n\r\nexport default CustomPagination\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC/B,MAAM;IAAEC,aAAa;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGJ,KAAK;EACvE,MAAMK,WAAW,GAAG,EAAE;EAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACN,SAAS,GAAGD,aAAa,CAAC,EAAEK,CAAC,EAAE,EAAE;IAC9DD,WAAW,CAACI,IAAI,CAACH,CAAC,CAAC;EACrB;EAEAI,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;EAExB,IAAIO,KAAK,GAAG,CAAC;IACXC,GAAG,GAAGR,WAAW,CAACS,MAAM;EAC1B,IAAIX,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE;IACvBS,KAAK,GAAGT,WAAW,GAAG,CAAC;EACzB;EACA,IAAIA,WAAW,GAAG,CAAC,GAAGE,WAAW,CAACS,MAAM,EAAE;IACxCD,GAAG,GAAGV,WAAW,GAAG,CAAC;EACvB;EAEA,oBACEL,OAAA;IAAKiB,SAAS,EAAE,MAAO;IAAAC,QAAA,eACvBlB,OAAA,CAACF,WAAW;MACVqB,UAAU,EAAEd,WAAY;MACxBe,KAAK,EAAE,EAAG;MACVC,kBAAkB,EAAGb,CAAC,IAAKc,aAAa,CAACd,CAAC;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACC,EAAA,GArFQ1B,gBAAgB;AAuFzBA,gBAAgB,CAAC2B,SAAS,GAAG;EAC3BzB,aAAa,EAAEN,SAAS,CAACgC,MAAM;EAC/BzB,SAAS,EAAEP,SAAS,CAACiC,MAAM;EAC3BzB,WAAW,EAAER,SAAS,CAACiC,MAAM;EAC7BxB,cAAc,EAAET,SAAS,CAACkC;AAC5B,CAAC;AAED,eAAe9B,gBAAgB;AAAA,IAAA0B,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}